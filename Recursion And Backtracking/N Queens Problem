#include <bits/stdc++.h>

using namespace std;

bool isSafe(int row,int col,vector<vector<int>>&chess,int N){
    int i, j;
  
   
    for (i = 0; i < col; i++)
        if (chess[row][i])
            return false;
  
    
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (chess[i][j])
            return false;
  
    
    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (chess[i][j])
            return false;
  
    return true;
}
bool nqueen(int cols,vector<vector<int>>&chess,int n){
    if(cols==n){
    return  true;
    }
    for(int rows=0;rows<n;rows++){
        if(isSafe(rows,cols,chess,n)){
            chess[rows][cols]=1;
            if(nqueen(cols+1,chess,n)) return true;
            chess[rows][cols]=0;
        }
    }
    return false;
}
void print_chess(vector<vector<int>>&chess,int n){
    if(nqueen(0,chess,n)){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                cout<<chess[i][j]<<" ";
            }
            cout<<endl;
        }
        cout<<endl;
    }
    else cout<<-1;
    
}

int main()
{
    int n;
    cin>>n;
    vector<vector<int>>chess(n,vector<int>(n,0));
    
    
  print_chess(chess,n);

    return 0;
}
